<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>2017Spring 協同產品設計實習 (虎尾科大MDE)</title><link href="./" rel="alternate"></link><link href="./feeds/all.atom.xml" rel="self"></link><id>./</id><updated>2017-05-31T11:00:00+08:00</updated><entry><title>W15</title><link href="./w15.html" rel="alternate"></link><published>2017-05-31T11:00:00+08:00</published><updated>2017-05-31T11:00:00+08:00</updated><author><name>yen</name></author><id>tag:,2017-05-31:./w15.html</id><summary type="html">&lt;p&gt;組員協同練習

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/D5Kw0LaoyPw" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;!-- 導入 Brython 標準程式庫 --&gt;&lt;/p&gt;
&lt;script src="../data/Brython-3.3.1/brython.js"&gt;&lt;/script&gt;

&lt;script src="../data/Brython-3.3.1/brython_stdlib.js"&gt;&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
// 設定 data/py 為共用程式路徑
brython({debug:1, pythonpath:['./../data/py']});
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 繪圖--&gt;

&lt;canvas id="onegear" width="800" height="600"&gt;&lt;/canvas&gt;

&lt;div id="onegear_div" width="800" height="20"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
import math
# deg 為角度轉為徑度的轉換因子
deg = math.pi/180.
# 定義 Spur 類別
class Spur(object):
    def __init__(self, ctx):
        self.ctx = ctx

    def create_line(self, x1, y1, x2, y2, width=3, fill="red"):
        self.ctx.beginPath()
        self.ctx.lineWidth = width
        self.ctx.moveTo(x1, y1)
        self.ctx.lineTo(x2, y2)
        self.ctx.strokeStyle = fill
        self.ctx.stroke()
    #
    # 定義一個繪正齒輪的繪圖函式
    # midx 為齒輪圓心 x 座標
    # midy 為齒輪圓心 y 座標
    # rp 為節圓半徑, n 為齒數
    # pa 為壓力角 (deg)
    # rot 為旋轉角 (deg)
    # 已經針對 n 大於等於 52 齒時的繪圖錯誤修正, 因為 base circle 與齒根圓大小必須進行判斷
    def Gear(self, midx, midy, rp, n=20, pa=20, color="black"):
        # 齒輪漸開線分成 15 線段繪製
        imax = 15
        # 在輸入的畫布上繪製直線, 由圓心到節圓 y 軸頂點畫一直線
        self.create_line(midx, midy, midx, midy-rp)
        # 畫出 rp 圓, 畫圓函式尚未定義
        #create_oval(midx-rp, midy-rp, midx+rp, midy+rp, width=2)
        # a 為模數 (代表公制中齒的大小), 模數為節圓直徑(稱為節徑)除以齒數
        # 模數也就是齒冠大小
        a=2*rp/n
        # d 為齒根大小, 為模數的 1.157 或 1.25倍, 這裡採 1.25 倍
        d=2.5*rp/n
        # ra 為齒輪的外圍半徑
        ra=rp+a
        # 畫出 ra 圓, 畫圓函式尚未定義
        #create_oval(midx-ra, midy-ra, midx+ra, midy+ra, width=1)
        # rb 則為齒輪的基圓半徑
        # 基圓為漸開線長齒之基準圓
        rb=rp*math.cos(pa*deg)
        # 畫出 rb 圓 (基圓), 畫圓函式尚未定義
        #create_oval(midx-rb, midy-rb, midx+rb, midy+rb, width=1)
        # rd 為齒根圓半徑
        rd=rp-d
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        # 畫出 rd 圓 (齒根圓), 畫圓函式尚未定義
        #create_oval(midx-rd, midy-rd, midx+rd, midy+rd, width=1)
        # dr 則為基圓到齒頂圓半徑分成 imax 段後的每段半徑增量大小
        # 將圓弧分成 imax 段來繪製漸開線
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        if rd&gt;rb:
            dr = (ra-rd)/imax
        else:
            dr=(ra-rb)/imax
        # tan(pa*deg)-pa*deg 為漸開線函數
        sigma=math.pi/(2*n)+math.tan(pa*deg)-pa*deg
        for j in range(n):
            ang=-2.*j*math.pi/n+sigma
            ang2=2.*j*math.pi/n+sigma
            lxd=midx+rd*math.sin(ang2-2.*math.pi/n)
            lyd=midy-rd*math.cos(ang2-2.*math.pi/n)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd&gt;rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(alpha-ang)
                ypt=r*math.cos(alpha-ang)
                xd=rd*math.sin(-ang)
                yd=rd*math.cos(-ang)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由左側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    lfx=midx+xpt
                    lfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # the line from last end of dedendum point to the recent
            # end of dedendum point
            # lxd 為齒根圓上的左側 x 座標, lyd 則為 y 座標
            # 下列為齒根圓上用來近似圓弧的直線
            self.create_line((lxd),(lyd),(midx+xd),(midy-yd),fill=color)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd&gt;rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(ang2-alpha)
                ypt=r*math.cos(ang2-alpha)
                xd=rd*math.sin(ang2)
                yd=rd*math.cos(ang2)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由右側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    rfx=midx+xpt
                    rfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # lfx 為齒頂圓上的左側 x 座標, lfy 則為 y 座標
            # 下列為齒頂圓上用來近似圓弧的直線
            self.create_line(lfx,lfy,rfx,rfy,fill=color)
canvas = doc['onegear']
ctx = canvas.getContext("2d")
x = (canvas.width)/2
y = (canvas.height)/2
r = 0.8*(canvas.height/2)
# 齒數
n = 36
# 壓力角
pa = 20
Spur(ctx).Gear(x, y, r, n, pa, "blue")

ctx.beginPath()
ctx.fillStyle = "   #2894FF"
ctx.font = "30px ScriptS"
ctx.fillText("40423204 ",340,300)
ctx.stroke()
# 以下列出 W11 2B 與 2A 未出席人數
data = open("./../data/w11/2b0503.txt", encoding="utf-8").read()
data1 = open("./../data/w11/2a0504.txt", encoding="utf-8").read()
count = 0
count1 = 0
# 去掉前面兩列
student = data.split("\n")[2:]
student1 = data1.split("\n")[2:]
for i in range(len(student)):
    each = student[i].split("\t")
    # 請注意, Brython 在 Windows 環境無法正確判定字串, 原因不明
    if each[1] != "出席":
        count = count + 1
for i in range(len(student1)):
    each1 = student1[i].split("\t")
    if each1[1] != "present":
        count1 = count1 + 1
div = doc["onegear_div"]
div &lt;= "2b: " +  str(count) + "/" + str(len(student)) + "|" + "2a: " +  str(count1) + "/" + str(len(student1))
&lt;/script&gt;

&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script src="../data/Brython-3.3.1/brython.js"&gt;&lt;/script&gt;

&lt;script src="../data/Brython-3.3.1/brython_stdlib.js"&gt;&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
// 設定 data/py 為共用程式路徑
brython({debug:1, pythonpath:['./../data/py']});
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 繪圖--&gt;

&lt;canvas id="onegear2" width="800" height="600"&gt;&lt;/canvas&gt;

&lt;div id="onegear_div" width="800" height="20"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
import math
# deg 為角度轉為徑度的轉換因子
deg = math.pi/180.
# 定義 Spur 類別
class Spur(object):
    def __init__(self, ctx):
        self.ctx = ctx

    def create_line(self, x1, y1, x2, y2, width=3, fill="red"):
        self.ctx.beginPath()
        self.ctx.lineWidth = width
        self.ctx.moveTo(x1, y1)
        self.ctx.lineTo(x2, y2)
        self.ctx.strokeStyle = fill
        self.ctx.stroke()
    #
    # 定義一個繪正齒輪的繪圖函式
    # midx 為齒輪圓心 x 座標
    # midy 為齒輪圓心 y 座標
    # rp 為節圓半徑, n 為齒數
    # pa 為壓力角 (deg)
    # rot 為旋轉角 (deg)
    # 已經針對 n 大於等於 52 齒時的繪圖錯誤修正, 因為 base circle 與齒根圓大小必須進行判斷
    def Gear(self, midx, midy, rp, n=20, pa=20, color="black"):
        # 齒輪漸開線分成 15 線段繪製
        imax = 15
        # 在輸入的畫布上繪製直線, 由圓心到節圓 y 軸頂點畫一直線
        self.create_line(midx, midy, midx, midy-rp)
        # 畫出 rp 圓, 畫圓函式尚未定義
        #create_oval(midx-rp, midy-rp, midx+rp, midy+rp, width=2)
        # a 為模數 (代表公制中齒的大小), 模數為節圓直徑(稱為節徑)除以齒數
        # 模數也就是齒冠大小
        a=2*rp/n
        # d 為齒根大小, 為模數的 1.157 或 1.25倍, 這裡採 1.25 倍
        d=2.5*rp/n
        # ra 為齒輪的外圍半徑
        ra=rp+a
        # 畫出 ra 圓, 畫圓函式尚未定義
        #create_oval(midx-ra, midy-ra, midx+ra, midy+ra, width=1)
        # rb 則為齒輪的基圓半徑
        # 基圓為漸開線長齒之基準圓
        rb=rp*math.cos(pa*deg)
        # 畫出 rb 圓 (基圓), 畫圓函式尚未定義
        #create_oval(midx-rb, midy-rb, midx+rb, midy+rb, width=1)
        # rd 為齒根圓半徑
        rd=rp-d
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        # 畫出 rd 圓 (齒根圓), 畫圓函式尚未定義
        #create_oval(midx-rd, midy-rd, midx+rd, midy+rd, width=1)
        # dr 則為基圓到齒頂圓半徑分成 imax 段後的每段半徑增量大小
        # 將圓弧分成 imax 段來繪製漸開線
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        if rd&gt;rb:
            dr = (ra-rd)/imax
        else:
            dr=(ra-rb)/imax
        # tan(pa*deg)-pa*deg 為漸開線函數
        sigma=math.pi/(2*n)+math.tan(pa*deg)-pa*deg
        for j in range(n):
            ang=-2.*j*math.pi/n+sigma
            ang2=2.*j*math.pi/n+sigma
            lxd=midx+rd*math.sin(ang2-2.*math.pi/n)
            lyd=midy-rd*math.cos(ang2-2.*math.pi/n)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd&gt;rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(alpha-ang)
                ypt=r*math.cos(alpha-ang)
                xd=rd*math.sin(-ang)
                yd=rd*math.cos(-ang)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由左側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    lfx=midx+xpt
                    lfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # the line from last end of dedendum point to the recent
            # end of dedendum point
            # lxd 為齒根圓上的左側 x 座標, lyd 則為 y 座標
            # 下列為齒根圓上用來近似圓弧的直線
            self.create_line((lxd),(lyd),(midx+xd),(midy-yd),fill=color)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd&gt;rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(ang2-alpha)
                ypt=r*math.cos(ang2-alpha)
                xd=rd*math.sin(ang2)
                yd=rd*math.cos(ang2)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由右側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    rfx=midx+xpt
                    rfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # lfx 為齒頂圓上的左側 x 座標, lfy 則為 y 座標
            # 下列為齒頂圓上用來近似圓弧的直線
            self.create_line(lfx,lfy,rfx,rfy,fill=color)
canvas = doc['onegear2']
ctx = canvas.getContext("2d")
x = (canvas.width)/2
y = (canvas.height)/2
r = 0.8*(canvas.height/2)
# 齒數
n = 36
# 壓力角
pa = 20
Spur(ctx).Gear(x, y, r, n, pa, "blue")

ctx.beginPath()

ctx.lineWidth="600"

ctx.strokeStyle="white"

ctx.moveTo(0,600)

ctx.lineTo(800,600)

ctx.stroke()

ctx.beginPath()
ctx.fillStyle = "   #2894FF"
ctx.font = "30px ScriptS"
ctx.fillText("40423204 ",340,300)
ctx.stroke()
&lt;/script&gt;</summary><category term="spur2"></category></entry><entry><title>W17</title><link href="./w17.html" rel="alternate"></link><published>2017-05-31T11:00:00+08:00</published><updated>2017-05-31T11:00:00+08:00</updated><author><name>yen</name></author><id>tag:,2017-05-31:./w17.html</id><summary type="html">&lt;p&gt;組員協同練習

2D 繪圖
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/uHEB8FENkoQ" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/N18xUMJtTG4" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/rhOQtPRi1t4" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;!-- 導入 Brython 標準程式庫 --&gt;&lt;/p&gt;
&lt;pre class="brush: python"&gt;

ѲԓolveSpaceREVa


Group.h.v=00000001
Group.type=5000
Group.name=#references
Group.color=ff000000
Group.skipFirst=0
Group.predef.swapUV=0
Group.predef.negateU=0
Group.predef.negateV=0
Group.visible=1
Group.suppress=0
Group.relaxConstraints=0
Group.allowRedundant=0
Group.allDimsReference=0
Group.remap={
}
AddGroup

Group.h.v=00000002
Group.type=5001
Group.order=1
Group.name=sketch-in-plane
Group.activeWorkplane.v=80020000
Group.color=ff000000
Group.subtype=6000
Group.skipFirst=0
Group.predef.q.w=1.00000000000000000000
Group.predef.origin.v=00010001
Group.predef.swapUV=0
Group.predef.negateU=0
Group.predef.negateV=0
Group.visible=1
Group.suppress=0
Group.relaxConstraints=0
Group.allowRedundant=0
Group.allDimsReference=0
Group.remap={
}
AddGroup

Param.h.v.=00010010
AddParam

Param.h.v.=00010011
AddParam

Param.h.v.=00010012
AddParam

Param.h.v.=00010020
Param.val=1.00000000000000000000
AddParam

Param.h.v.=00010021
AddParam

Param.h.v.=00010022
AddParam

Param.h.v.=00010023
AddParam

Param.h.v.=00020010
AddParam

Param.h.v.=00020011
AddParam

Param.h.v.=00020012
AddParam

Param.h.v.=00020020
Param.val=0.50000000000000000000
AddParam

Param.h.v.=00020021
Param.val=0.50000000000000000000
AddParam

Param.h.v.=00020022
Param.val=0.50000000000000000000
AddParam

Param.h.v.=00020023
Param.val=0.50000000000000000000
AddParam

Param.h.v.=00030010
AddParam

Param.h.v.=00030011
AddParam

Param.h.v.=00030012
AddParam

Param.h.v.=00030020
Param.val=0.50000000000000000000
AddParam

Param.h.v.=00030021
Param.val=-0.50000000000000000000
AddParam

Param.h.v.=00030022
Param.val=-0.50000000000000000000
AddParam

Param.h.v.=00030023
Param.val=-0.50000000000000000000
AddParam

Param.h.v.=00040010
Param.val=-3.66025403784438550000
AddParam

Param.h.v.=00040011
Param.val=33.66025403784438900000
AddParam

Param.h.v.=00040013
Param.val=-48.66025403784437500000
AddParam

Param.h.v.=00040014
Param.val=-44.28203230275509100000
AddParam

Param.h.v.=00050010
Param.val=-48.66025403784437500000
AddParam

Param.h.v.=00050011
Param.val=-44.28203230275509100000
AddParam

Param.h.v.=00050013
Param.val=-31.33974596215560400000
AddParam

Param.h.v.=00050014
Param.val=-54.28203230275509100000
AddParam

Param.h.v.=00060010
Param.val=-31.33974596215560400000
AddParam

Param.h.v.=00060011
Param.val=-54.28203230275509100000
AddParam

Param.h.v.=00060013
Param.val=13.66025403784438900000
AddParam

Param.h.v.=00060014
Param.val=23.66025403784438900000
AddParam

Param.h.v.=00070010
Param.val=13.66025403784438900000
AddParam

Param.h.v.=00070011
Param.val=23.66025403784438900000
AddParam

Param.h.v.=00070013
Param.val=-3.66025403784438550000
AddParam

Param.h.v.=00070014
Param.val=33.66025403784438900000
AddParam

Param.h.v.=00080010
Param.val=3.66025403784438460000
AddParam

Param.h.v.=00080011
Param.val=33.66025403784438900000
AddParam

Param.h.v.=00080013
Param.val=48.66025403784439600000
AddParam

Param.h.v.=00080014
Param.val=-44.28203230275508400000
AddParam

Param.h.v.=00090010
Param.val=48.66025403784439600000
AddParam

Param.h.v.=00090011
Param.val=-44.28203230275508400000
AddParam

Param.h.v.=00090013
Param.val=31.33974596215562200000
AddParam

Param.h.v.=00090014
Param.val=-54.28203230275509100000
AddParam

Param.h.v.=000a0010
Param.val=31.33974596215562200000
AddParam

Param.h.v.=000a0011
Param.val=-54.28203230275509100000
AddParam

Param.h.v.=000a0013
Param.val=-13.66025403784438700000
AddParam

Param.h.v.=000a0014
Param.val=23.66025403784438900000
AddParam

Param.h.v.=000b0010
Param.val=-13.66025403784438700000
AddParam

Param.h.v.=000b0011
Param.val=23.66025403784438900000
AddParam

Param.h.v.=000b0013
Param.val=3.66025403784438460000
AddParam

Param.h.v.=000b0014
Param.val=33.66025403784438900000
AddParam

Param.h.v.=000c0010
Param.val=0.00000000000000000000
AddParam

Param.h.v.=000c0011
Param.val=20.00000000000000400000
AddParam

Param.h.v.=000c0040
Param.val=3.94461658466320400000
AddParam

Request.h.v=00000001
Request.type=100
Request.group.v=00000001
Request.construction=0
AddRequest

Request.h.v=00000002
Request.type=100
Request.group.v=00000001
Request.construction=0
AddRequest

Request.h.v=00000003
Request.type=100
Request.group.v=00000001
Request.construction=0
AddRequest

Request.h.v=00000004
Request.type=200
Request.workplane.v=80020000
Request.group.v=00000002
Request.construction=0
AddRequest

Request.h.v=00000005
Request.type=200
Request.workplane.v=80020000
Request.group.v=00000002
Request.construction=0
AddRequest

Request.h.v=00000006
Request.type=200
Request.workplane.v=80020000
Request.group.v=00000002
Request.construction=0
AddRequest

Request.h.v=00000007
Request.type=200
Request.workplane.v=80020000
Request.group.v=00000002
Request.construction=0
AddRequest

Request.h.v=00000008
Request.type=200
Request.workplane.v=80020000
Request.group.v=00000002
Request.construction=0
AddRequest

Request.h.v=00000009
Request.type=200
Request.workplane.v=80020000
Request.group.v=00000002
Request.construction=0
AddRequest

Request.h.v=0000000a
Request.type=200
Request.workplane.v=80020000
Request.group.v=00000002
Request.construction=0
AddRequest

Request.h.v=0000000b
Request.type=200
Request.workplane.v=80020000
Request.group.v=00000002
Request.construction=0
AddRequest

Request.h.v=0000000c
Request.type=400
Request.workplane.v=80020000
Request.group.v=00000002
Request.construction=0
AddRequest

Entity.h.v=00010000
Entity.type=10000
Entity.construction=0
Entity.point[0].v=00010001
Entity.normal.v=00010020
Entity.actVisible=1
AddEntity

Entity.h.v=00010001
Entity.type=2000
Entity.construction=0
Entity.actVisible=1
AddEntity

Entity.h.v=00010020
Entity.type=3000
Entity.construction=0
Entity.point[0].v=00010001
Entity.actNormal.w=1.00000000000000000000
Entity.actVisible=1
AddEntity

Entity.h.v=00020000
Entity.type=10000
Entity.construction=0
Entity.point[0].v=00020001
Entity.normal.v=00020020
Entity.actVisible=1
AddEntity

Entity.h.v=00020001
Entity.type=2000
Entity.construction=0
Entity.actVisible=1
AddEntity

Entity.h.v=00020020
Entity.type=3000
Entity.construction=0
Entity.point[0].v=00020001
Entity.actNormal.w=0.50000000000000000000
Entity.actNormal.vx=0.50000000000000000000
Entity.actNormal.vy=0.50000000000000000000
Entity.actNormal.vz=0.50000000000000000000
Entity.actVisible=1
AddEntity

Entity.h.v=00030000
Entity.type=10000
Entity.construction=0
Entity.point[0].v=00030001
Entity.normal.v=00030020
Entity.actVisible=1
AddEntity

Entity.h.v=00030001
Entity.type=2000
Entity.construction=0
Entity.actVisible=1
AddEntity

Entity.h.v=00030020
Entity.type=3000
Entity.construction=0
Entity.point[0].v=00030001
Entity.actNormal.w=0.50000000000000000000
Entity.actNormal.vx=-0.50000000000000000000
Entity.actNormal.vy=-0.50000000000000000000
Entity.actNormal.vz=-0.50000000000000000000
Entity.actVisible=1
AddEntity

Entity.h.v=00040000
Entity.type=11000
Entity.construction=0
Entity.point[0].v=00040001
Entity.point[1].v=00040002
Entity.workplane.v=80020000
Entity.actVisible=1
AddEntity

Entity.h.v=00040001
Entity.type=2001
Entity.construction=0
Entity.workplane.v=80020000
Entity.actPoint.x=-3.66025403784438550000
Entity.actPoint.y=33.66025403784438900000
Entity.actVisible=1
AddEntity

Entity.h.v=00040002
Entity.type=2001
Entity.construction=0
Entity.workplane.v=80020000
Entity.actPoint.x=-48.66025403784437500000
Entity.actPoint.y=-44.28203230275509100000
Entity.actVisible=1
AddEntity

Entity.h.v=00050000
Entity.type=11000
Entity.construction=0
Entity.point[0].v=00050001
Entity.point[1].v=00050002
Entity.workplane.v=80020000
Entity.actVisible=1
AddEntity

Entity.h.v=00050001
Entity.type=2001
Entity.construction=0
Entity.workplane.v=80020000
Entity.actPoint.x=-48.66025403784437500000
Entity.actPoint.y=-44.28203230275509100000
Entity.actVisible=1
AddEntity

Entity.h.v=00050002
Entity.type=2001
Entity.construction=0
Entity.workplane.v=80020000
Entity.actPoint.x=-31.33974596215560400000
Entity.actPoint.y=-54.28203230275509100000
Entity.actVisible=1
AddEntity

Entity.h.v=00060000
Entity.type=11000
Entity.construction=0
Entity.point[0].v=00060001
Entity.point[1].v=00060002
Entity.workplane.v=80020000
Entity.actVisible=1
AddEntity

Entity.h.v=00060001
Entity.type=2001
Entity.construction=0
Entity.workplane.v=80020000
Entity.actPoint.x=-31.33974596215560400000
Entity.actPoint.y=-54.28203230275509100000
Entity.actVisible=1
AddEntity

Entity.h.v=00060002
Entity.type=2001
Entity.construction=0
Entity.workplane.v=80020000
Entity.actPoint.x=13.66025403784438900000
Entity.actPoint.y=23.66025403784438900000
Entity.actVisible=1
AddEntity

Entity.h.v=00070000
Entity.type=11000
Entity.construction=0
Entity.point[0].v=00070001
Entity.point[1].v=00070002
Entity.workplane.v=80020000
Entity.actVisible=1
AddEntity

Entity.h.v=00070001
Entity.type=2001
Entity.construction=0
Entity.workplane.v=80020000
Entity.actPoint.x=13.66025403784438900000
Entity.actPoint.y=23.66025403784438900000
Entity.actVisible=1
AddEntity

Entity.h.v=00070002
Entity.type=2001
Entity.construction=0
Entity.workplane.v=80020000
Entity.actPoint.x=-3.66025403784438550000
Entity.actPoint.y=33.66025403784438900000
Entity.actVisible=1
AddEntity

Entity.h.v=00080000
Entity.type=11000
Entity.construction=0
Entity.point[0].v=00080001
Entity.point[1].v=00080002
Entity.workplane.v=80020000
Entity.actVisible=1
AddEntity

Entity.h.v=00080001
Entity.type=2001
Entity.construction=0
Entity.workplane.v=80020000
Entity.actPoint.x=3.66025403784438460000
Entity.actPoint.y=33.66025403784438900000
Entity.actVisible=1
AddEntity

Entity.h.v=00080002
Entity.type=2001
Entity.construction=0
Entity.workplane.v=80020000
Entity.actPoint.x=48.66025403784439600000
Entity.actPoint.y=-44.28203230275508400000
Entity.actVisible=1
AddEntity

Entity.h.v=00090000
Entity.type=11000
Entity.construction=0
Entity.point[0].v=00090001
Entity.point[1].v=00090002
Entity.workplane.v=80020000
Entity.actVisible=1
AddEntity

Entity.h.v=00090001
Entity.type=2001
Entity.construction=0
Entity.workplane.v=80020000
Entity.actPoint.x=48.66025403784439600000
Entity.actPoint.y=-44.28203230275508400000
Entity.actVisible=1
AddEntity

Entity.h.v=00090002
Entity.type=2001
Entity.construction=0
Entity.workplane.v=80020000
Entity.actPoint.x=31.33974596215562200000
Entity.actPoint.y=-54.28203230275509100000
Entity.actVisible=1
AddEntity

Entity.h.v=000a0000
Entity.type=11000
Entity.construction=0
Entity.point[0].v=000a0001
Entity.point[1].v=000a0002
Entity.workplane.v=80020000
Entity.actVisible=1
AddEntity

Entity.h.v=000a0001
Entity.type=2001
Entity.construction=0
Entity.workplane.v=80020000
Entity.actPoint.x=31.33974596215562200000
Entity.actPoint.y=-54.28203230275509100000
Entity.actVisible=1
AddEntity

Entity.h.v=000a0002
Entity.type=2001
Entity.construction=0
Entity.workplane.v=80020000
Entity.actPoint.x=-13.66025403784438700000
Entity.actPoint.y=23.66025403784438900000
Entity.actVisible=1
AddEntity

Entity.h.v=000b0000
Entity.type=11000
Entity.construction=0
Entity.point[0].v=000b0001
Entity.point[1].v=000b0002
Entity.workplane.v=80020000
Entity.actVisible=1
AddEntity

Entity.h.v=000b0001
Entity.type=2001
Entity.construction=0
Entity.workplane.v=80020000
Entity.actPoint.x=-13.66025403784438700000
Entity.actPoint.y=23.66025403784438900000
Entity.actVisible=1
AddEntity

Entity.h.v=000b0002
Entity.type=2001
Entity.construction=0
Entity.workplane.v=80020000
Entity.actPoint.x=3.66025403784438460000
Entity.actPoint.y=33.66025403784438900000
Entity.actVisible=1
AddEntity

Entity.h.v=000c0000
Entity.type=13000
Entity.construction=0
Entity.point[0].v=000c0001
Entity.normal.v=000c0020
Entity.distance.v=000c0040
Entity.workplane.v=80020000
Entity.actVisible=1
AddEntity

Entity.h.v=000c0001
Entity.type=2001
Entity.construction=0
Entity.workplane.v=80020000
Entity.actPoint.x=0.00000000000000000000
Entity.actPoint.y=20.00000000000000400000
Entity.actVisible=1
AddEntity

Entity.h.v=000c0020
Entity.type=3001
Entity.construction=0
Entity.point[0].v=000c0001
Entity.workplane.v=80020000
Entity.actNormal.w=1.00000000000000000000
Entity.actVisible=1
AddEntity

Entity.h.v=000c0040
Entity.type=4000
Entity.construction=0
Entity.workplane.v=80020000
Entity.actDistance=3.94461658466320400000
Entity.actVisible=1
AddEntity

Entity.h.v=80020000
Entity.type=10000
Entity.construction=0
Entity.point[0].v=80020002
Entity.normal.v=80020001
Entity.actVisible=1
AddEntity

Entity.h.v=80020001
Entity.type=3010
Entity.construction=0
Entity.point[0].v=80020002
Entity.actNormal.w=1.00000000000000000000
Entity.actVisible=1
AddEntity

Entity.h.v=80020002
Entity.type=2012
Entity.construction=0
Entity.actVisible=1
AddEntity

Constraint.h.v=00000001
Constraint.type=20
Constraint.group.v=00000002
Constraint.workplane.v=80020000
Constraint.ptA.v=00040002
Constraint.ptB.v=00050001
Constraint.other=0
Constraint.other2=0
Constraint.reference=0
AddConstraint

Constraint.h.v=00000002
Constraint.type=20
Constraint.group.v=00000002
Constraint.workplane.v=80020000
Constraint.ptA.v=00050002
Constraint.ptB.v=00060001
Constraint.other=0
Constraint.other2=0
Constraint.reference=0
AddConstraint

Constraint.h.v=00000003
Constraint.type=20
Constraint.group.v=00000002
Constraint.workplane.v=80020000
Constraint.ptA.v=00060002
Constraint.ptB.v=00070001
Constraint.other=0
Constraint.other2=0
Constraint.reference=0
AddConstraint

Constraint.h.v=00000004
Constraint.type=20
Constraint.group.v=00000002
Constraint.workplane.v=80020000
Constraint.ptA.v=00040001
Constraint.ptB.v=00070002
Constraint.other=0
Constraint.other2=0
Constraint.reference=0
AddConstraint

Constraint.h.v=00000005
Constraint.type=20
Constraint.group.v=00000002
Constraint.workplane.v=80020000
Constraint.ptA.v=00080002
Constraint.ptB.v=00090001
Constraint.other=0
Constraint.other2=0
Constraint.reference=0
AddConstraint

Constraint.h.v=00000006
Constraint.type=20
Constraint.group.v=00000002
Constraint.workplane.v=80020000
Constraint.ptA.v=00090002
Constraint.ptB.v=000a0001
Constraint.other=0
Constraint.other2=0
Constraint.reference=0
AddConstraint

Constraint.h.v=00000007
Constraint.type=20
Constraint.group.v=00000002
Constraint.workplane.v=80020000
Constraint.ptA.v=000a0002
Constraint.ptB.v=000b0001
Constraint.other=0
Constraint.other2=0
Constraint.reference=0
AddConstraint

Constraint.h.v=00000008
Constraint.type=20
Constraint.group.v=00000002
Constraint.workplane.v=80020000
Constraint.ptA.v=00080001
Constraint.ptB.v=000b0002
Constraint.other=0
Constraint.other2=0
Constraint.reference=0
AddConstraint

Constraint.h.v=00000009
Constraint.type=122
Constraint.group.v=00000002
Constraint.workplane.v=80020000
Constraint.entityA.v=00040000
Constraint.entityB.v=00070000
Constraint.other=0
Constraint.other2=0
Constraint.reference=0
AddConstraint

Constraint.h.v=0000000a
Constraint.type=122
Constraint.group.v=00000002
Constraint.workplane.v=80020000
Constraint.entityA.v=00070000
Constraint.entityB.v=00060000
Constraint.other=0
Constraint.other2=0
Constraint.reference=0
AddConstraint

Constraint.h.v=0000000b
Constraint.type=122
Constraint.group.v=00000002
Constraint.workplane.v=80020000
Constraint.entityA.v=00050000
Constraint.entityB.v=00060000
Constraint.other=0
Constraint.other2=0
Constraint.reference=0
AddConstraint

Constraint.h.v=0000000c
Constraint.type=122
Constraint.group.v=00000002
Constraint.workplane.v=80020000
Constraint.entityA.v=000a0000
Constraint.entityB.v=00090000
Constraint.other=0
Constraint.other2=0
Constraint.reference=0
AddConstraint

Constraint.h.v=0000000d
Constraint.type=122
Constraint.group.v=00000002
Constraint.workplane.v=80020000
Constraint.entityA.v=00080000
Constraint.entityB.v=00090000
Constraint.other=0
Constraint.other2=0
Constraint.reference=0
AddConstraint

Constraint.h.v=0000000e
Constraint.type=122
Constraint.group.v=00000002
Constraint.workplane.v=80020000
Constraint.entityA.v=000b0000
Constraint.entityB.v=00080000
Constraint.other=0
Constraint.other2=0
Constraint.reference=0
AddConstraint

Constraint.h.v=0000000f
Constraint.type=50
Constraint.group.v=00000002
Constraint.workplane.v=80020000
Constraint.entityA.v=00040000
Constraint.entityB.v=00080000
Constraint.other=0
Constraint.other2=0
Constraint.reference=0
AddConstraint

Constraint.h.v=00000010
Constraint.type=50
Constraint.group.v=00000002
Constraint.workplane.v=80020000
Constraint.entityA.v=00070000
Constraint.entityB.v=000b0000
Constraint.other=0
Constraint.other2=0
Constraint.reference=0
AddConstraint

Constraint.h.v=00000011
Constraint.type=30
Constraint.group.v=00000002
Constraint.workplane.v=80020000
Constraint.valA=90.00000000000000000000
Constraint.ptA.v=00040001
Constraint.ptB.v=00040002
Constraint.other=0
Constraint.other2=0
Constraint.reference=0
Constraint.disp.offset.x=-7.71745001957567740000
Constraint.disp.offset.y=6.35932112692474140000
AddConstraint

Constraint.h.v=00000012
Constraint.type=30
Constraint.group.v=00000002
Constraint.workplane.v=80020000
Constraint.valA=20.00000000000000000000
Constraint.ptA.v=000b0001
Constraint.ptB.v=000b0002
Constraint.other=0
Constraint.other2=0
Constraint.reference=0
Constraint.disp.offset.x=5.69169622377927540000
Constraint.disp.offset.y=-8.22220129261116740000
AddConstraint

Constraint.h.v=00000013
Constraint.type=42
Constraint.group.v=00000002
Constraint.workplane.v=80020000
Constraint.ptA.v=00010001
Constraint.entityA.v=00060000
Constraint.other=0
Constraint.other2=0
Constraint.reference=0
AddConstraint

Constraint.h.v=00000014
Constraint.type=42
Constraint.group.v=00000002
Constraint.workplane.v=80020000
Constraint.ptA.v=00010001
Constraint.entityA.v=000a0000
Constraint.other=0
Constraint.other2=0
Constraint.reference=0
AddConstraint

Constraint.h.v=00000015
Constraint.type=120
Constraint.group.v=00000002
Constraint.workplane.v=80020000
Constraint.valA=60.00000000000000000000
Constraint.entityA.v=00060000
Constraint.entityB.v=000a0000
Constraint.other=0
Constraint.other2=0
Constraint.reference=0
Constraint.disp.offset.x=1.99999999999999980000
Constraint.disp.offset.y=-23.79999999999999700000
AddConstraint

Constraint.h.v=00000016
Constraint.type=32
Constraint.group.v=00000002
Constraint.workplane.v=80020000
Constraint.valA=10.00000000000000000000
Constraint.ptA.v=000c0001
Constraint.entityA.v=000b0000
Constraint.other=0
Constraint.other2=0
Constraint.reference=0
AddConstraint

Constraint.h.v=00000017
Constraint.type=32
Constraint.group.v=00000002
Constraint.workplane.v=80020000
Constraint.valA=10.00000000000000000000
Constraint.ptA.v=000c0001
Constraint.entityA.v=00080000
Constraint.other=0
Constraint.other2=0
Constraint.reference=0
AddConstraint

Constraint.h.v=00000018
Constraint.type=41
Constraint.group.v=00000002
Constraint.workplane.v=80020000
Constraint.ptA.v=000c0001
Constraint.entityA.v=00020000
Constraint.other=0
Constraint.other2=0
Constraint.reference=0
AddConstraint

Constraint.h.v=00000019
Constraint.type=32
Constraint.group.v=00000002
Constraint.workplane.v=80020000
Constraint.valA=-10.00000000000000000000
Constraint.ptA.v=000c0001
Constraint.entityA.v=00070000
Constraint.other=0
Constraint.other2=0
Constraint.reference=0
AddConstraint

Constraint.h.v=0000001a
Constraint.type=32
Constraint.group.v=00000002
Constraint.workplane.v=80020000
Constraint.valA=-10.00000000000000000000
Constraint.ptA.v=000c0001
Constraint.entityA.v=00060000
Constraint.other=0
Constraint.other2=0
Constraint.reference=0
AddConstraint

&lt;/pre&gt;</summary><category term="spur2"></category></entry><entry><title>test</title><link href="./test.html" rel="alternate"></link><published>2017-05-31T08:40:00+08:00</published><updated>2017-05-31T08:40:00+08:00</updated><author><name>yen</name></author><id>tag:,2017-05-31:./test.html</id><summary type="html">&lt;p&gt;組員協同練習:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;請以 W15 練習為網誌標題, 800x600 為畫布大小, 在畫布正中央畫一個半徑為 250 畫素, 壓力角 20, 齒數為 36 齒的漸開線正齒輪輪廓.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;完成後, 請在正齒輪中央寫上自己的學號, 並建立第二個 800x600 的畫布, 但只畫出只有上半齒形輪廓的正齒輪, 且半齒輪廓下方水平線以紅色線繪製, 且在齒輪下方以藍色字元寫上自己的學號.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;請各學員在各自 github 倉儲中的 data/py 目錄中, 編寫一個可以採圓心座標, 節圓半徑, 齒數, 壓力角與定位角度作為輸入的齒輪程式函式, 交由組長從各組員的 submodule 設定中呼叫導入, 以便在各分組的網頁中完成一個畫出所有組員協同繪圖的齒輪減速組圖, 且各齒輪正中心必須寫上組員學號, 各組按照學號大小排序, 分別由最右邊齒數 16 齒開始囓合, 依序增加 2 齒, 當排至平面四齒囓合後, 第五位組員則以垂直方向向下囓合兩個齒輪後, 轉由右至左水平排列, 直至所有組員均各提供一個協同囓合用的齒輪為止.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;請依照上述規劃, 在 Onshape 完成相同齒輪組的囓合協同繪圖.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;各組員與組員請同時用 Youtube 與 vimeo, 紀錄上述各階段程式編寫與繪圖配置的 mp4 影片檔案, 標題為"協同產品設計實習第十五週練習".&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</summary><category term="w15"></category></entry><entry><title>cango2DSpurSimulate</title><link href="./cango2dspursimulate.html" rel="alternate"></link><published>2017-05-16T11:00:00+08:00</published><updated>2017-05-16T11:00:00+08:00</updated><author><name>yen</name></author><id>tag:,2017-05-16:./cango2dspursimulate.html</id><summary type="html">&lt;p&gt;正齒輪2d模擬

&lt;!-- 導入 Brython 標準程式庫 --&gt;&lt;/p&gt;
&lt;script src="../data/Brython-3.3.1/brython.js"&gt;&lt;/script&gt;

&lt;script src="../data/Brython-3.3.1/brython_stdlib.js"&gt;&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
// 設定 data/py 為共用程式路徑
brython({debug:1, pythonpath:['./../data/py']});
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 繪圖--&gt;

&lt;canvas id="onegear" width="800" height="600"&gt;&lt;/canvas&gt;

&lt;div id="onegear_div" width="800" height="20"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
import math
# deg 為角度轉為徑度的轉換因子
deg = math.pi/180.
# 定義 Spur 類別
class Spur(object):
    def __init__(self, ctx):
        self.ctx = ctx

    def create_line(self, x1, y1, x2, y2, width=3, fill="red"):
        self.ctx.beginPath()
        self.ctx.lineWidth = width
        self.ctx.moveTo(x1, y1)
        self.ctx.lineTo(x2, y2)
        self.ctx.strokeStyle = fill
        self.ctx.stroke()
    #
    # 定義一個繪正齒輪的繪圖函式
    # midx 為齒輪圓心 x 座標
    # midy 為齒輪圓心 y 座標
    # rp 為節圓半徑, n 為齒數
    # pa 為壓力角 (deg)
    # rot 為旋轉角 (deg)
    # 已經針對 n 大於等於 52 齒時的繪圖錯誤修正, 因為 base circle 與齒根圓大小必須進行判斷
    def Gear(self, midx, midy, rp, n=20, pa=20, color="black"):
        # 齒輪漸開線分成 15 線段繪製
        imax = 15
        # 在輸入的畫布上繪製直線, 由圓心到節圓 y 軸頂點畫一直線
        self.create_line(midx, midy, midx, midy-rp)
        # 畫出 rp 圓, 畫圓函式尚未定義
        #create_oval(midx-rp, midy-rp, midx+rp, midy+rp, width=2)
        # a 為模數 (代表公制中齒的大小), 模數為節圓直徑(稱為節徑)除以齒數
        # 模數也就是齒冠大小
        a=2*rp/n
        # d 為齒根大小, 為模數的 1.157 或 1.25倍, 這裡採 1.25 倍
        d=2.5*rp/n
        # ra 為齒輪的外圍半徑
        ra=rp+a
        # 畫出 ra 圓, 畫圓函式尚未定義
        #create_oval(midx-ra, midy-ra, midx+ra, midy+ra, width=1)
        # rb 則為齒輪的基圓半徑
        # 基圓為漸開線長齒之基準圓
        rb=rp*math.cos(pa*deg)
        # 畫出 rb 圓 (基圓), 畫圓函式尚未定義
        #create_oval(midx-rb, midy-rb, midx+rb, midy+rb, width=1)
        # rd 為齒根圓半徑
        rd=rp-d
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        # 畫出 rd 圓 (齒根圓), 畫圓函式尚未定義
        #create_oval(midx-rd, midy-rd, midx+rd, midy+rd, width=1)
        # dr 則為基圓到齒頂圓半徑分成 imax 段後的每段半徑增量大小
        # 將圓弧分成 imax 段來繪製漸開線
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        if rd&gt;rb:
            dr = (ra-rd)/imax
        else:
            dr=(ra-rb)/imax
        # tan(pa*deg)-pa*deg 為漸開線函數
        sigma=math.pi/(2*n)+math.tan(pa*deg)-pa*deg
        for j in range(n):
            ang=-2.*j*math.pi/n+sigma
            ang2=2.*j*math.pi/n+sigma
            lxd=midx+rd*math.sin(ang2-2.*math.pi/n)
            lyd=midy-rd*math.cos(ang2-2.*math.pi/n)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd&gt;rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(alpha-ang)
                ypt=r*math.cos(alpha-ang)
                xd=rd*math.sin(-ang)
                yd=rd*math.cos(-ang)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由左側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    lfx=midx+xpt
                    lfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # the line from last end of dedendum point to the recent
            # end of dedendum point
            # lxd 為齒根圓上的左側 x 座標, lyd 則為 y 座標
            # 下列為齒根圓上用來近似圓弧的直線
            self.create_line((lxd),(lyd),(midx+xd),(midy-yd),fill=color)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd&gt;rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(ang2-alpha)
                ypt=r*math.cos(ang2-alpha)
                xd=rd*math.sin(ang2)
                yd=rd*math.cos(ang2)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由右側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    rfx=midx+xpt
                    rfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # lfx 為齒頂圓上的左側 x 座標, lfy 則為 y 座標
            # 下列為齒頂圓上用來近似圓弧的直線
            self.create_line(lfx,lfy,rfx,rfy,fill=color)
canvas = doc['onegear']
ctx = canvas.getContext("2d")
x = (canvas.width)/2
y = (canvas.height)/2
r = 0.8*(canvas.height/2)
# 齒數
n = 53
# 壓力角
pa = 20
Spur(ctx).Gear(x, y, r, n, pa, "blue")
# 以下列出 W11 2B 與 2A 未出席人數
data = open("./../data/w11/2b0503.txt", encoding="utf-8").read()
data1 = open("./../data/w11/2a0504.txt", encoding="utf-8").read()
count = 0
count1 = 0
# 去掉前面兩列
student = data.split("\n")[2:]
student1 = data1.split("\n")[2:]
for i in range(len(student)):
    each = student[i].split("\t")
    # 請注意, Brython 在 Windows 環境無法正確判定字串, 原因不明
    if each[1] != "出席":
        count = count + 1
for i in range(len(student1)):
    each1 = student1[i].split("\t")
    if each1[1] != "present":
        count1 = count1 + 1
div = doc["onegear_div"]
div &lt;= "2b: " +  str(count) + "/" + str(len(student)) + "|" + "2a: " +  str(count1) + "/" + str(len(student1))
&lt;/script&gt;

&lt;!-- 以下處理 Cango Spur Gear --&gt;

&lt;!-- Cango 程式庫 --&gt;

&lt;script type="text/javascript" src="./../data/w11/cango
/Cango-9v05-min.js"&gt;&lt;/script&gt;

&lt;script type="text/javascript" src="./../data/w11/cango
/CangoAxes-2v09.js"&gt;&lt;/script&gt;

&lt;script type="text/javascript" src="./../data/w11/cango
/CangoAnimation-5v00.js"&gt;&lt;/script&gt;

&lt;script type="text/javascript" src="./../data/w11/cango
/gearUtils-05.js"&gt;&lt;/script&gt;

&lt;canvas id='cango_gear' width='800' height='750'&gt;&lt;/canvas&gt;

&lt;script type="text/python"&gt;
# 將 導入的 document 設為 doc 主要原因在於與舊程式碼相容
from browser import document as doc
# 由於 Python3 與 Javascript 程式碼已經不再混用, 因此來自 Javascript 的變數, 必須居中透過 window 物件轉換
from browser import window
import math

# 主要用來取得畫布大小
canvas = doc["cango_gear"]
# 此程式採用 Cango Javascript 程式庫繪圖, 因此無需 ctx
ctx = canvas.getContext("2d")
cango = window.Cango.new
# 針對變數的轉換, shapeDefs 在 Cango 中資料型別為變數, 可以透過 window 轉換
shapedefs = window.shapeDefs
# 目前 Cango 結合 Animation 在 Brython 尚無法運作, 此刻只能繪製靜態圖形
# in CangoAnimation.js
#interpolate1 = window.interpolate
# Cobi 與 createGearTooth 都是 Cango Javascript 程式庫中的物件
#cobj = window.Cobj.new
shape = window.Shape.new
path = window.Path.new
creategeartooth = window.createGearTooth.new

tweener = window.Tweener.new
# 經由 Cango 轉換成 Brython 的 cango, 指定將圖畫在 id="cango_gear" 的 canvas 上
cgo = cango("cango_gear")

######################################
# 畫正齒輪輪廓
#####################################
# n 為齒數
n = 17
# pa 為壓力角
pa = 25
# m 為模數, 根據畫布的寬度, 計算適合的模數大小
# Module = mm of pitch diameter per tooth
m = 0.8*canvas.width/n
# pr 為節圓半徑
pr = n*m/2 # gear Pitch radius
# generate gear
data = creategeartooth(m, n, pa)
# Brython 程式中的 print 會將資料印在 Browser 的 console 區
#print(data)
gearTooth = shape(data, {
  "fillColor":"#ddd0dd",
  "border": True,
  "strokeColor": "#606060" })
gearTooth.rotate(180/n) # rotate gear 1/2 tooth to mesh
# 單齒的齒形資料經過旋轉後, 將資料複製到 gear 物件中
gear = gearTooth.dup()
# gear 為單一齒的輪廓資料
#cgo.render(gearTooth)

# 利用單齒輪廓旋轉, 產生整個正齒輪外形
for i in range(1, n):
    # 將 gearTooth 中的資料複製到 newTooth
    newTooth = gearTooth.dup()
    # 配合迴圈, newTooth 的齒形資料進行旋轉, 然後利用 appendPath 方法, 將資料併入 gear
    newTooth.rotate(360*i/n)
    # appendPath 為 Cango 程式庫中的方法, 第二個變數為 True, 表示要刪除最前頭的 Move to SVG Path 標註符號
    gear.appendPath(newTooth, True) # trim move command = True

# 建立軸孔
# add axle hole, hr 為 hole radius
hr = 0.6*pr # diameter of gear shaft
shaft = path(shapedefs.circle(hr))
shaft.revWinding()
gear.appendPath(shaft) # retain the 'moveTo' command for shaft sub path

# setup the animation
# backlash (mm)
bklsh = 0.04*m
# centre shift to make backlash
dC = bklsh/(2*math.tan(math.pi*pa/180))
# np 為小齒輪齒數
np = 13
# gear ratio
gr = n/np              
gearConfig = {'cx':-pr, 'cy':0, 'degs':[0, 360]}
# gr*0.666 rpm
#pinionConfig = {'cx':pr+dC, 'cy':0, 'degs':[0, -gr*360]}
# 0.666 rpm
twnr = tweener(0, 90000, "loop")

cx = canvas.width/2
cy = canvas.height/2
#gear.translate(cx, cy)
# render 繪出靜態正齒輪輪廓
#cgo.render(gear)
# 利用 gear 資料複製一份, 命名為 gear1
gear1 = gear.dup()

from time import time
from browser.timer import request_animation_frame as raf
from browser.timer import set_interval

deg = math.pi/180

def draw():
    cgo.clearCanvas()
    gear.rotate(2*deg)
    # 在特定位置, 以特定 scale, 特定 degs 執行 render
    cgo.render(gear, {'x':cx-pr/2, 'y':cy, 'scl':0.5, 'degs':0})
    gear1.rotate(-2*deg)
    cgo.render(gear1, {'x':cx+pr*2*0.5-pr/2, 'y':cy, 'scl':0.5, 'degs':0})

set_interval(draw, 2)
&lt;/script&gt;</summary><category term="spur"></category></entry><entry><title>week7</title><link href="./week7.html" rel="alternate"></link><published>2017-04-05T11:00:00+08:00</published><updated>2017-04-05T11:00:00+08:00</updated><author><name>yen</name></author><id>tag:,2017-04-05:./week7.html</id><summary type="html">&lt;p&gt;往fossil傳遞檔案，以及onshape參數繪圖
&lt;/p&gt;
&lt;p&gt;Part1.&lt;/p&gt;
&lt;p&gt;全自動的 start.bat&lt;/p&gt;
&lt;p&gt;近端的 fossil SCM + stunnel&lt;/p&gt;
&lt;p&gt;W7 起將要利用FOSSIL進行文字檔設計資料的版次管理.&lt;/p&gt;
&lt;p&gt;協同產品設計課程有哪些文字檔案設計資料？&lt;/p&gt;
&lt;p&gt;.py&lt;/p&gt;
&lt;p&gt;.md&lt;/p&gt;
&lt;p&gt;.bat&lt;/p&gt;
&lt;p&gt;reveal 與 pelican 的設計檔案&lt;/p&gt;
&lt;p&gt;Part2.&lt;/p&gt;
&lt;p&gt;Solvespace , Onshape 的 one-link , fore-bar , eight-bar零件組圖，轉入V-rep 進行速度控制(動畫模擬)&lt;/p&gt;
&lt;p&gt;將stl零組件展示在分組網誌，能否多stl零組件集中在一個 html業面，協同？&lt;/p&gt;
&lt;p&gt;Part3.&lt;/p&gt;
&lt;p&gt;期中報告與自評&lt;/p&gt;
&lt;p&gt;Part_X1.&lt;/p&gt;
&lt;p&gt;Onshape Part Studio 建立教學，零件參數管理建立。&lt;/p&gt;
&lt;p&gt;Onshape 零組件轉出 stl 檔為定位方便，軸與孔不可以理想完整配合。 須留餘隙，否則在轉出 stl 檔時將會將會與孔干涉，導致孔與軸疊合為一零件。&lt;/p&gt;
&lt;p&gt;圓柱體總高不可小於或者等於直徑，導入 V-rep 會無法辨識其為柱狀零件(軸)。V-rep 其便是軸為抓取零件之長寬比。&lt;/p&gt;
&lt;p&gt;Part_X2.&lt;/p&gt;
&lt;p&gt;sqlite3.exe 工具&lt;/p&gt;
&lt;p&gt;sqlite vcp.fossil&lt;/p&gt;
&lt;p&gt;log in&lt;/p&gt;
&lt;p&gt;pw&lt;/p&gt;
&lt;p&gt;cap
.schema user
select login,pw cap from user
更改user ps(password)&lt;/p&gt;
&lt;p&gt;update user set up ='s' where login='****';
Part_X3.&lt;/p&gt;
&lt;p&gt;fossil clone uri vcp.fossil(Filename)&lt;/p&gt;
&lt;p&gt;fossil open ./ ../ ../vcp.fossil&lt;/p&gt;
&lt;p&gt;進行改版&lt;/p&gt;
&lt;p&gt;fossil add.&lt;/p&gt;
&lt;p&gt;fossil remote -url off&lt;/p&gt;
&lt;p&gt;fossil commit -m "commit messenge"&lt;/p&gt;
&lt;p&gt;fossil push https://user@192.168.&lt;em&gt;.&lt;/em&gt;*&lt;/p&gt;
&lt;p&gt;key-in user passeword to complete push&lt;/p&gt;
&lt;iframe src="https://player.vimeo.com/video/212731781" width="640" height="480" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href="https://vimeo.com/212731781"&gt;2017-04-11_19-51-04 w7 40423204&lt;/a&gt; from &lt;a href="https://vimeo.com/user45523667"&gt;40423204&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;</summary><category term="w7"></category></entry><entry><title>week6</title><link href="./week6.html" rel="alternate"></link><published>2017-03-23T11:00:00+08:00</published><updated>2017-03-23T11:00:00+08:00</updated><author><name>yen</name></author><id>tag:,2017-03-23:./week6.html</id><summary type="html">&lt;p&gt;準備期中驗收
&lt;/p&gt;
&lt;p&gt;完成其他組件的v-rep做動模擬&lt;/p&gt;

&lt;p&gt;完成課程遺漏部分，便於下週進行自評&lt;/p&gt;

&lt;iframe src="https://player.vimeo.com/video/211496479" width="640" height="480" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href="https://vimeo.com/211496479"&gt;2017-04-04_23-26-45 40423204_w6&lt;/a&gt; from &lt;a href="https://vimeo.com/user45523667"&gt;40423204&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;</summary><category term="w6"></category></entry><entry><title>week5</title><link href="./week5.html" rel="alternate"></link><published>2017-03-22T11:00:00+08:00</published><updated>2017-03-22T11:00:00+08:00</updated><author><name>yen</name></author><id>tag:,2017-03-22:./week5.html</id><summary type="html">&lt;p&gt;fossil wiki首頁的使用及使one-link bar轉動
&lt;/p&gt;
&lt;p&gt;建立一個與project name同名的wiki，該wiki會成為首頁&lt;/p&gt;

&lt;p&gt;認識fossil wiki的三種編譯方式-Fossil wiki，Markdown 以及Plain text&lt;/p&gt;

&lt;p&gt;嘗試利用V-rep使solvespace做出的one-link bar，利用triangle mesh存檔後進行旋轉做動&lt;/p&gt;

&lt;p&gt;做好one link bar 之後要利用export triangle mesh存成stl檔，在V-REP用inport打開此檔案，之後用edit&gt;grouping/merging&gt;divide selected shapes進行分解&lt;/p&gt;

&lt;p&gt;將軸放至底部的子目錄，再將上蓋放置軸的子目錄進行固定，最後將軸變成馬達，即可讓簡易的one-link bar進行轉動&lt;/p&gt;

&lt;iframe src="https://player.vimeo.com/video/210402905" width="640" height="333" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href="https://vimeo.com/210402905"&gt;2017-03-28_18-30-41 40423204_hw5&lt;/a&gt; from &lt;a href="https://vimeo.com/user45523667"&gt;40423204&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;</summary><category term="w5"></category></entry><entry><title>week4</title><link href="./week4.html" rel="alternate"></link><published>2017-03-20T11:00:00+08:00</published><updated>2017-03-20T11:00:00+08:00</updated><author><name>yen</name></author><id>tag:,2017-03-20:./week4.html</id><summary type="html">&lt;p&gt;運營fossil製程的wiki

&lt;p&gt;使用老師建立的新fossil，獲得管理權後加入其他組員&lt;/p&gt;
&lt;p&gt;介紹altair的應力分析&lt;/p&gt;
&lt;p&gt;認識Xming X-windows vnc remote desktop&lt;/p&gt;&lt;/p&gt;
&lt;iframe src="https://player.vimeo.com/video/209206357" width="640" height="333" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href="https://vimeo.com/209206357"&gt;2017-03-20_22-26-25 40423204﹍w4&lt;/a&gt; from &lt;a href="https://vimeo.com/user45523667"&gt;40423204&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;</summary><category term="w4"></category></entry><entry><title>week3</title><link href="./week3.html" rel="alternate"></link><published>2017-03-07T11:00:00+08:00</published><updated>2017-03-07T11:00:00+08:00</updated><author><name>yen</name></author><id>tag:,2017-03-07:./week3.html</id><summary type="html">&lt;p&gt;介紹Altair及製作近端fossil

&lt;p&gt;從 https://mde2al.kmol.info 進file:///Y:/w3/2017springcd_hw/users/yen.leo入新區域的wiki檢視每周進度&lt;/p&gt;
&lt;p&gt;了解Altair的soildthinking&lt;/p&gt;
&lt;p&gt;認識Altair的特色，其中包括檢測受力.受熱.流力.最小化資源利用.較為人性的快捷列&lt;/p&gt;
&lt;p&gt;更改start的fossil路徑並且建立自己的近端fossil帳號密碼&lt;/p&gt;&lt;/p&gt;</summary><category term="w3"></category></entry><entry><title>week2</title><link href="./week2.html" rel="alternate"></link><published>2017-03-01T11:00:00+08:00</published><updated>2017-03-01T11:00:00+08:00</updated><author><name>yen</name></author><id>tag:,2017-03-01:./week2.html</id><summary type="html">&lt;p&gt;使用py進行有效率的分組

&lt;p&gt;使用ethercalc製作簡易的分組表格&lt;/p&gt;
&lt;p&gt;認識cp950(大五碼)&lt;/p&gt;
&lt;p&gt;使用py建立分組程序，並且挑出未被分類的學生&lt;/p&gt;
&lt;p&gt;製作簡易連桿組&lt;/p&gt;
&lt;p&gt;了解vrep起始抓點，在做stl檔的時候原點需跟物件拉開一定距離&lt;/p&gt;
&lt;iframe src="https://player.vimeo.com/video/206248051" width="640" height="443" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/206248051"&gt;2017-03-02 40423204 w2&lt;/a&gt; from &lt;a href="https://vimeo.com/user45523667"&gt;40423204&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;</summary><category term="w2"></category></entry><entry><title>week1</title><link href="./week1.html" rel="alternate"></link><published>2017-02-24T11:00:00+08:00</published><updated>2017-02-24T11:00:00+08:00</updated><author><name>yen</name></author><id>tag:,2017-02-24:./week1.html</id><summary type="html">&lt;p&gt;介紹課程大綱

&lt;p&gt;了解Blender 3dstudio maya之相關性&lt;/p&gt;
&lt;p&gt;stunnel 的使用 http的proxy&lt;/p&gt;
&lt;p&gt;在py語言中,;(分號)=註解&lt;/p&gt;
&lt;p&gt;簡略介紹c語言與py的優劣與使用時機&lt;/p&gt;
&lt;p&gt;利用cmd輸出ipconfig /all 查詢ip後&lt;/p&gt;
&lt;p&gt;至stunnel&amp;gt;config&amp;gt;stunnel.conf\,利用Scite找到http字串修改其ip&lt;/p&gt;
&lt;p&gt;進入例如https://192.168.1.24/2017springvcp_hw/index 的協同區域,並且嘗試以anonymous（無名氏/遊客）的身份進入&lt;/p&gt;
&lt;p&gt;利用vrep配合Scite打開的ttt檔完成做動模擬&lt;/p&gt;&lt;/p&gt;</summary><category term="w1"></category></entry></feed>